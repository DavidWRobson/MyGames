#!/usr/bin/python3

import re

def ECFchange( RatingChange ):

    if ( RatingChange< 0.0 ):
       sign = -1.0
    else:
       sign = 1.0
    absRatingChange = abs(RatingChange)

    if absRatingChange <= 3:
       return sign * 0.0
    if absRatingChange <= 10:
       return sign * 0.2
    if absRatingChange <= 17:
       return sign * 0.4
    if absRatingChange <= 25:
       return sign * 0.6
    if absRatingChange <= 32:
       return sign * 0.8
    if absRatingChange <= 39:
       return sign * 1.0
    if absRatingChange <= 46:
       return sign * 1.2
    if absRatingChange <= 53:
       return sign * 1.4
    if absRatingChange <= 61:
       return sign * 1.6
    if absRatingChange <= 68:
       return sign * 1.8
    if absRatingChange <= 76:
       return sign * 2.0
    if absRatingChange <= 83:
       return sign * 2.2
    if absRatingChange <= 91:
       return sign * 2.4
    if absRatingChange <= 98:
       return sign * 2.6
    if absRatingChange <= 106:
       return sign * 2.8
    if absRatingChange <= 113:
       return sign * 3.0
    if absRatingChange <= 121:
       return sign * 3.2
    if absRatingChange <= 129:
       return sign * 3.4
    if absRatingChange <= 137:
       return sign * 3.6
    if absRatingChange <= 145:
       return sign * 3.8
    if absRatingChange <= 153:
       return sign * 4.0
    if absRatingChange <= 162:
       return sign * 4.2
    if absRatingChange <= 170:
       return sign * 4.4
    if absRatingChange <= 179:
       return sign * 4.6
    if absRatingChange <= 188:
       return sign * 4.8
    if absRatingChange <= 197:
       return sign * 5.0
    if absRatingChange <= 206:
       return sign * 5.2
    if absRatingChange <= 215:
       return sign * 5.4
    if absRatingChange <= 225:
       return sign * 5.6
    if absRatingChange <= 235:
       return sign * 5.8
    if absRatingChange <= 245:
       return sign * 6.0
    if absRatingChange <= 256:
       return sign * 6.2
    if absRatingChange <= 267:
       return sign * 6.4
    if absRatingChange <= 278:
       return sign * 6.6
    if absRatingChange <= 289:
       return sign * 6.8
    if absRatingChange <= 302:
       return sign * 7.0
    if absRatingChange <= 315:
       return sign * 7.2
    if absRatingChange <= 328:
       return sign * 7.4
    if absRatingChange <= 344:
       return sign * 7.6
    if absRatingChange <= 357:
       return sign * 7.8
    if absRatingChange <= 374:
       return sign * 8.0
    if absRatingChange <= 391:
       return sign * 8.2
    return sign * 8.4

me    = "David Robson"
  
count = 0
date = opponent = result = colour = myRating = platerRating = \
       whiteECF = blackECF = "?"
ratingIncrease = opening = variation = " "

file1 = open('/home/dave/Documents/chess/MyGames/MyGames.pgn', 'r')
Lines = file1.readlines()

# Strips the newline character
for line in Lines:

    if re.match(r"^\[ *Date .*", line):
        date = line.split('"')[1];

    if re.match(r"^\[ *WhiteECF .*", line):
        whiteECF = line.split('"')[1];

    if re.match(r"^\[ *BlackECF .*", line):
        blackECF = line.split('"')[1];

    if re.match(r"^\[ *Result .*", line):
        result = line.split('"')[1];

    if re.match(r"^\[ *Opening .*", line):
        opening = line.split('"')[1];

    if re.match(r"^\[ *Variation.*", line):
        variation = line.split('"')[1];

    if re.match(r"^\[ *White .*", line):
        player = line.split('"')[1];
        if player != me:
           opponent = player;
           colour = "BLACK";

    if re.match(r"^\[ *Black .*", line):
        player = line.split('"')[1];
        if player != me:
           opponent = player;
           colour = "WHITE";

    if re.match(r"^ *1\. *[a-zA-Z].*", line):
        if colour == "WHITE":
           playerRating = blackECF
           myRating = whiteECF
        if colour == "BLACK":
           playerRating = whiteECF
           myRating = blackECF
        if result == "1/2-1/2":
           result = "DREW"
        if result == "1-0" and colour == "WHITE":
           result = "WON"
        if result == "1-0" and colour == "BLACK":
           result = "LOST"
        if result == "0-1" and colour == "WHITE":
           result = "LOST"
        if result == "0-1" and colour == "BLACK":
           result = "WON"

        if (myRating.isnumeric() and playerRating.isnumeric()):

           if result == "WON":
              ratingIncrease = round( 10.0 + ECFchange( int(playerRating)  - int(myRating)), 2)
           elif result == "DREW":
              ratingIncrease = round( ECFchange( int(playerRating)  - int(myRating)), 2)
           elif result == "LOST":
              ratingIncrease = round( -10.0 + ECFchange( int(playerRating)  - int(myRating)), 2)
              
        print(date,opponent.ljust(22),result.ljust(4),colour,myRating.rjust(4),\
               playerRating.rjust(4),str(ratingIncrease).rjust(5),opening.ljust(22),variation)
        date = opponent = result = colour = myRating = platerRating = \
               whiteECF = blackECF = "?"
        ratingIncrease = opening = variation = " "

file1.close()
